<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="{{ asset('vendor/jquery-easing/jquery.easing.min.js') }}"></script>
<script src="{{ asset('vendor/bootstrap/js/bootstrap.bundle.min.js') }}"></script>

<!-- Core plugin JavaScript-->
<script src="{{ asset('vendor/jquery-easing/jquery.easing.min.js') }}"></script>

<!-- Custom scripts for all pages-->
<script src="{{ asset('js/sb-admin-2.min.js') }}"></script>

<script>

$.fn.pageMe = function(opts){
    var $this = this,
        defaults = {
            perPage: 7,
            showPrevNext: false,
            numbersPerPage: 5,
            hidePageNumbers: false
        },
        settings = $.extend(defaults, opts);
    
    var listElement = $this;
    var perPage = settings.perPage; 
    var children = listElement.children();
    var pager = $('.pagination');
    
    if (typeof settings.childSelector!="undefined") {
        children = listElement.find(settings.childSelector);
    }
    
    if (typeof settings.pagerSelector!="undefined") {
        pager = $(settings.pagerSelector);
    }
    
    var numItems = children.length;
    var numPages = Math.ceil(numItems/perPage);

    pager.data("curr",0);
    
    if (settings.showPrevNext){
        $('<li class="page-item"><a href="#" class="prev-link page-link">«</a></li>').appendTo(pager);
    }
    
    var curr = 0;
    while(numPages > curr && (settings.hidePageNumbers==false)){
        $('<li class="page-item"><a href="#" class="page-link page-compte">'+(curr+1)+'</a></li>').appendTo(pager);
        curr++;
    }
  
    if (settings.numbersPerPage>1) {
       $('.page-compte').hide();
       $('.page-compte').slice(pager.data("curr"), settings.numbersPerPage).show();
    }
    
    if (settings.showPrevNext){
        $('<li class="page-item"><a href="#" class="next-link page-link">»</a></li>').appendTo(pager);
    }
    
    pager.find('.page-compte:first').addClass('active');
    pager.find('.prev-link').hide();
    if (numPages<=1) {
        pager.find('.next-link').hide();
    }
  	pager.children().eq(1).addClass("active");
    
    children.hide();
    children.slice(0, perPage).show();
    
    pager.find('li .page-compte').click(function(){
        var clickedPage = $(this).html().valueOf()-1;
        goTo(clickedPage,perPage);
        return false;
    });
    pager.find('li .prev-link').click(function(){
        previous();
        return false;
    });
    pager.find('li .next-link').click(function(){
        next();
        return false;
    });
    
    function previous(){
        var goToPage = parseInt(pager.data("curr")) - 1;
        goTo(goToPage);
    }
     
    function next(){
        goToPage = parseInt(pager.data("curr")) + 1;
        goTo(goToPage);
    }
    
    function goTo(page){
        var startAt = page * perPage,
            endOn = startAt + perPage;
        
        children.css('display','none').slice(startAt, endOn).show();
        
        if (page>=1) {
            pager.find('.prev-link').show();
        }
        else {
            pager.find('.prev-link').hide();
        }
        
        if (page<(numPages-1)) {
            pager.find('.next-link').show();
        }
        else {
            pager.find('.next-link').hide();
        }
        
        pager.data("curr",page);
       
        if (settings.numbersPerPage>1) {
       		$('.page-compte').hide();
       		$('.page-compte').slice(page, settings.numbersPerPage+page).show();
    	}
      
      	pager.children().removeClass("active");
        pager.children().eq(page+1).addClass("active");
    
    }
};
//signal-corps

$(document).ready(function() {

    const token = localStorage.getItem("token");

        const reset = () => {
        $(".btn_submit").attr("disabled", false);
        $(".btn_submit").css("background-color", "#EF0051");
        $(".btn_submit").hover(() => { $(".btn_submit").css("background-color", "#D31052") })
    };

    const disable = () => {
        $(".btn_submit").attr("disabled", true);
        $(".btn_submit").css("background-color", "gray");
    }
String.prototype.rtrim = function() {
    return this.replace(/\s+$/, "");
}

    function inputMotif(inputData,input){
    let motifData = inputData.rtrim();
    let motifInput = input;

        if(motifData.length < 1){
            motifInput.after('<div class="erreur text-dark small" style="font-size: xx-small;">Le motif ne peux pas être vide</div>');   
            
        }
    }
    if(token !== ""){

        $.ajax({
            type: "GET",
            url: "https://webradio-stream.herokuapp.com/authorized/signalements/all",
            headers: {
                'Authorization':'Bearer ' + token
            },
            dataType: "json",
        }).done((response) =>{

            if(response != undefined) {

                 let mytab;
            

                    //for(let i=0; i<response.signalements.length; i++){

                       mytab +='<tr><td >'+response.signalements[0].channel_id+'</td><td >'+response.signalements[0].channel_name
                        +'</td><td ><a href="#" class="" id="'
                        +response.signalements[0].channel_id+'">'
                        +response.signalements[0].nombre_signalements+'</a></td><td><a href="#" data-toggle="modal" data-dismiss="modal" id="'
                        +response.signalements[0].channel_id+'" class="far fa-trash-alt fa-2x"></a><a href="#myedit" data-toggle="modal" data-dismiss="modal" class="fa-2x far fa-edit" id="'
                        +response.signalements[0].channel_id+'"></a></td></tr>';
                        
                       
                    //}
                    
                    $("#signal-corps").append(mytab);  //const id = $(this).data("id")
                    $("#signal-corps").pageMe({pagerSelector:'#myPager',showPrevNext:true,hidePageNumbers:false,perPage:4});                    

                    $('.fa-edit').on("click", function(){

                        let signalId = $(this).attr("id");

                       //localStorage.setItem("signalId", signalId);
                       $('#editSignal').modal("show");

                       $('#update_channel_signalements_id').attr('value', signalId);

                       $('#update_channel_signalements_form').on("click", function(e){

                           e.preventDefault(); 
                            disable();
                           const signalement_id = $("#update_channel_signalements_id").val();

                            let usernameShow = $('#format-update').val();
                                let inpUser = $('#format-update');
                                let createUser = inputUsername(usernameShow,inpUser);
                                
                            let data = {
                                motif: createUser
                            };
                          if (createUser !== undefined) {

                         $.ajax({
                               type: "PUT",
                               url: 'https://webradio-stream.herokuapp.com/authorized/signalement/update/'+signalement_id,
                               data: data,
                               headers: {
                                    'Authorization':'Bearer ' + token
                                },
                           }).done( (data) =>{

                                console.log(data);

                           }).fail( (err) =>{

                               console.log(err);
                           });

                       });// end update

                        console.log(signalId);

                    });// modify signal


                $('.fa-trash-alt').on("click", function(){ // TODO supprression
                     
                    let signalId = $(this).attr("id");

                    $.ajax({
                        type: "DELETE",
                        url: 'https://webradio-stream.herokuapp.com/authorized/signalement/update/'+signalId,
                        headers: {
                            'Authorization':'Bearer ' + token
                        },
                    }).done( (data) =>{

                        console.log(data);

                    }).fail( (err) =>{

                        console.log(err);
                    })

                });// delete

            }
            console.log(response);

        }).fail((error) =>{

            console.log(error);
        });
    } // end if

});




</script>