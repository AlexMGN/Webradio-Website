<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script src="https://www.gstatic.com/firebasejs/live/3.0/firebase.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="{{ asset('vendor/jquery-easing/jquery.easing.min.js') }}"></script>
<script src="{{ asset('vendor/bootstrap/js/bootstrap.bundle.min.js') }}"></script>

<!-- Core plugin JavaScript-->
<script src="{{ asset('vendor/jquery-easing/jquery.easing.min.js') }}"></script>

<!-- Custom scripts for all pages-->
<script src="{{ asset('js/sb-admin-2.min.js') }}"></script>
<script src="{{ asset('js/mainJs/index.js') }}"></script>


<script>
console.log("new user")


$(document).ready(function() {

const token = localStorage.getItem("token");

String.prototype.rtrim = function() {
    return this.replace(/\s+$/, "");
}

        let lowerCaseLetters = /[a-z]/gi;
        let numbers = /[0-9]/i;
        let upperCaseLetters = /[A-Z]/gi;

function inputUsername(inputData,input){
    let usernameData = inputData.rtrim();
    let usernameInput = input;

    if(usernameData.length < 1){
        usernameInput.after('<div class="erreur text-dark small" style="font-size: xx-small;">Le nom d\'utilisateur doit être de 3 caractères minimum et ne peux pas contenir d\'espace</div>');   
        
    }else{
        if(usernameData > 10) {
            usernameInput.after('<div class="erreur text-dark small" style="font-size: xx-small;">Le nom d\'utilisateur doit être  moins de 10 caractères</div>');
        }
         return usernameData;
           
    }
}//  verify username

function inputEmail(inputData, input){
    let emailData = inputData.rtrim();

    emailInput = input;
    if(emailData.length < 1) {
        emailInput.after('<div class="erreur text-dark small" style="font-size: xx-small;">Ce champ est obligatoire</div>');
    }else{
        let regEx = /^[a-zA-Z0-9][a-zA-Z0-9._%+-]{0,63}@(?:[a-zA-Z0-9-]{1,63}\.){1,125}[a-zA-Z]{2,63}$/;
        let validEmail = regEx.test(emailData);

        if(!validEmail)
        {
            emailInput.after('<span class="erreur text-dark small" style="font-size: xx-small;">Merci de rentrer une adresse email valide</span>');
        }
        else{
            return emailData;
        }
    }

}//  email verify

function inputPassword(inputData, input){
    let passwordData = inputData;
    passwordInput = input;

    if(passwordData.length < 8){
        passwordInput.after('<div class="erreur text-dark small-2" style="font-size: xx-small;">Merci de rentrer un mot de passe de 8 caractères minimum</div>');
        
    }else  {

        if(!passwordData.match(lowerCaseLetters)) {
            passwordInput.after('<div class="erreur text-dark small-2" style="font-size: xx-small;">Le mot de passe doit contenir au moins une letter minuscule</div>');   
        } 
        else if(!passwordData.match(upperCaseLetters)) {
            passwordInput.after('<div class="erreur text-dark small-2" style="font-size: xx-small;">Le mot de passe doit contenir au moins une letter majuscule</div>');   
        }

        else if (!passwordData.match(numbers)) {
            passwordInput.after('<div class="erreur text-dark small-2" style="font-size: xx-small;">Le mot de passe doit contenir au moins un chiffre</div>');   
        }
        return passwordData;
    }
} // password verify


    const reset = () => {
        $(".btn_submit").attr("disabled", false);
        $(".btn_submit").css("background-color", "#EF0051");
        $(".btn_submit").hover(() => { $(".btn_submit").css("background-color", "#D31052") })
    };

    const disable = () => {
        $(".btn_submit").attr("disabled", true);
        $(".btn_submit").css("background-color", "gray");
    }



    let firebaseConfig;
    let downloadUrl;

    $.ajax({
    method: "GET", 
    url: "/firebase", 
    async: true,
    success: function(data) {
    //console.log(data.apiKey+" "+data.authDomain+" "+data.databaseURL+" "+data.projectId+" "+data.storageBucket);
    
        firebaseConfig = {
            apiKey: data.apiKey,
            authDomain: data.authDomain,
            databaseURL: data.databaseURL,
            projectId: data.projectId,
            storageBucket: data.storageBucket
        };


        firebase.initializeApp(firebaseConfig);

        // On détecte le changement de fichier
        $('#cameraInput').on('change', function() {
            // On récupère le nouveau fichier
            let selectedFile = event.target.files[0];

            let filename = $('#cameraInput').val().replace(/C:\\fakepath\\/i, '');
            let storageRef = firebase.storage().ref('/User/new' + filename);

            // On envoi le fichier à Firebase
            let upload = storageRef.put(selectedFile);

            // Le traitement Firebase se fait ici
            upload.on('state_changed', function(snapshot) {

            }, function(error) {
                // Si Firebase renvoi une error on l'a met ici
                console.log(error)
            }, function() {
                // On récupère l'URL téléchargeable
                downloadUrl = upload.snapshot.downloadURL;
                // On l'affiche
                 console.log(downloadUrl);
            
                // On remplace l'URL de l'image par la nouvelle
                    $('#profil').attr('src', downloadUrl);
                    $('#logo-setting').attr('src', downloadUrl)
   

            });// i
        });

    $('#saveUser').click(function(e){
        e.preventDefault();
        disable();

        let email = $('#email').val();
        let inpEmail = $('#email');

        let username = $('#username').val();
        let inpUser = $('#username');

        let createEmail = inputEmail(email,inpEmail);
        let createUser = inputUsername(username,inpUser);

        let profilUrl = $('#profil').attr('src');


        $.ajax({
                type: "POST", 
                url: "/admin/users/new", 
                data: JSON.stringify({
                    "token": token,
                    "avatar": profilUrl,
                    "username": createUser,
                    "email": createEmail,

                }),
                dataType: 'json',
                async: true,
                success: function(data) {
                    reset();

                    if(data != undefined){
    
                        $('#newcompte').html(response.message);
                        $('#newcompte').css("display","block");
                    }
                    console.log(data);
                },
                error: function (error) {
                    reset();
                    console.log(error);
                }
        });

    }); // fin onclick   

    }

    });

    
});
</script>
 